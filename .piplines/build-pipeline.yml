trigger:
  branches:
    include:
      - dev
      - staging
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Set environment-specific backend files and variable files
  terraformBackendFile: ''
  terraformVarFile: ''

stages:
  - stage: Build
    displayName: 'Terraform Build'
    jobs:
      - job: Terraform_Init_Validate
        displayName: 'Terraform Init and Validate'
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          # Initialize Terraform
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'ARM'
              backendAzureRmResourceGroupName: 'terraform-state-rg'
              backendAzureRmStorageAccountName: 'tfstatestoragecloud'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: '$(terraformBackendFile)'
            displayName: 'Terraform Init'
          # Validate Terraform Code
          - script: |
              terraform validate
            displayName: 'Terraform Validate'
          # Package Terraform files (Create plan)
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-var-file=$(Build.SourcesDirectory)/Environments/Development/dev.tfvars'
              environmentServiceNameAzureRM: 'ARM'
            displayName: 'Terraform Plan'
          - publish: $(Build.SourcesDirectory)/
            artifact: tfplan
            displayName: 'Publish Plan Artifacttf_version'
